// <auto-generated />
using System;
using Blazor.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blazor.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241018131300_InitialCommit")]
    partial class InitialCommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blazor.API.Data.Entities.AdditionalFieldData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<long>("FlagId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Required")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('0')");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Addition__3214EC075D6ACCE9");

                    b.HasIndex("FlagId");

                    b.ToTable("AdditionalFieldData");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminCalendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelectAll")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id")
                        .HasName("PK__AdminCal__3214EC07BA9CA427");

                    b.ToTable("AdminCalendar");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminCalendarUsers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AdminCalendarId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__AdminCal__3214EC071BE00BA9");

                    b.HasIndex("AdminCalendarId");

                    b.HasIndex("UserId");

                    b.ToTable("AdminCalendarUsers");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__AdminDoc__3214EC07184B8360");

                    b.HasIndex("AddedBy");

                    b.ToTable("AdminDocuments");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsUser")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__AdminLea__3214EC078FE49EDF");

                    b.HasIndex("StateId");

                    b.ToTable("AdminLead");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminLeadId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusType")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__AdminLea__3214EC070D4955C3");

                    b.HasIndex("AddedBy");

                    b.HasIndex("AdminLeadId");

                    b.ToTable("AdminLeadComment");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadConversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminLeadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__AdminLea__3214EC07C1183B7A");

                    b.HasIndex("AddedBy");

                    b.HasIndex("AdminLeadId");

                    b.ToTable("AdminLeadConversation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminLeadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__AdminLea__3214EC0780B7927A");

                    b.HasIndex("AddedBy");

                    b.HasIndex("AdminLeadId");

                    b.ToTable("AdminLeadFile");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminLeadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__AdminLea__3214EC070E576B11");

                    b.HasIndex("AddedBy");

                    b.HasIndex("AdminLeadId");

                    b.ToTable("AdminLeadNote");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__AdminNot__3214EC07C9886EB7");

                    b.HasIndex("UserId");

                    b.ToTable("AdminNotes");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Agency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Npn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NPN");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AgencyAppointment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cocode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("COcode");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Fein")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FEIN");

                    b.Property<string>("LineOfAuthority")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Loacode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LOACode");

                    b.Property<DateTime?>("ReasonDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("TerminationReason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__AgencyAp__3214EC07F1726F3E");

                    b.HasIndex("AgencyId");

                    b.HasIndex("StateId");

                    b.ToTable("AgencyAppointment");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AgencyLicense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DateExpire")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResidency")
                        .HasColumnType("bit");

                    b.Property<long>("LicenseNo")
                        .HasColumnType("bigint");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__AgencyLi__3214EC0704597115");

                    b.HasIndex("AgencyId");

                    b.HasIndex("StateId");

                    b.ToTable("AgencyLicense");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AgencyState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateExpire")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateIssue")
                        .HasColumnType("datetime");

                    b.Property<string>("LicenseNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<byte?>("ResidencyStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SaleStatusType")
                        .HasColumnType("tinyint");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__AgencySt__3214EC07DF81EAA3");

                    b.HasIndex("AgencyId");

                    b.HasIndex("StateId");

                    b.ToTable("AgencyState");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AgencyUserView", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Id")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(752)
                        .HasColumnType("nvarchar(752)");

                    b.Property<string>("Npn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NPN");

                    b.Property<string>("ProfilePic")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StateId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.ToTable((string)null);

                    b.ToView("Agency_User_View", (string)null);
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AlternateContactDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Alternat__3214EC07419EB5D0");

                    b.ToTable("AlternateContactDetail");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Carrier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("GraphSequenceNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsAca")
                        .HasColumnType("bit")
                        .HasColumnName("IsACA");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("ShowInAdminGraph")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Carrier__3214EC0779CE1219");

                    b.ToTable("Carrier");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CityMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateID");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("CityMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CountryMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CountryMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CultureMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyCodeId")
                        .HasColumnType("int");

                    b.Property<int>("DateFormat")
                        .HasColumnType("int");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TimeFormat")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CultureM__3214EC0712CD20F2");

                    b.HasIndex("CurrencyCodeId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("CultureMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CurrencyMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyDisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Currency__3214EC0770D9B049");

                    b.ToTable("CurrencyMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.DesignationMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("DesignationMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.DesignationPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatorBy")
                        .HasColumnType("int");

                    b.Property<long>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<int>("DesignationPermissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.ToTable("DesignationPermission");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.EmailTemplate", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id")
                        .HasName("PK__EmailTem__3214EC07F76C4063");

                    b.ToTable("EmailTemplate");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Enquiry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Ipaddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPAddress");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Enquiry__3214EC07A04CE267");

                    b.ToTable("Enquiry");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.FlagMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FlagColor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FlagName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdditionalField")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDatetime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHidden")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsOtpEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtpMobile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SequenceId")
                        .HasColumnType("int");

                    b.Property<bool?>("VisibleToAll")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FlagMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadCategoryMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeadCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("LeadCategoryMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusType")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__LeadComm__3214EC07D574C019");

                    b.HasIndex("AddedBy");

                    b.ToTable("LeadComment");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadConversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__LeadConv__3214EC076824A4FA");

                    b.HasIndex("AddedBy");

                    b.ToTable("LeadConversation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__LeadEven__3214EC074AA76B8C");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("LeadEvent");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__LeadFile__3214EC07F8284F53");

                    b.HasIndex("AddedBy");

                    b.ToTable("LeadFile");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__LeadNote__3214EC0781F49184");

                    b.HasIndex("AddedBy");

                    b.HasIndex("LeadId");

                    b.ToTable("LeadNote");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadQualityMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeadQuality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("LeadQualityMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadSourceMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("LeadSourceMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreCart", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<double?>("GrantTotal")
                        .HasColumnType("float");

                    b.Property<byte?>("IsLeadUnder20Days")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LeadTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfLeads")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfLeads ");

                    b.Property<double?>("PerLeadPrice")
                        .HasColumnType("float");

                    b.Property<double?>("Tax")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__LeadStor__3214EC07782B12B3");

                    b.ToTable("LeadStoreCart");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreFilter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("LeadAge")
                        .HasColumnType("int");

                    b.Property<int?>("LeadTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("MinAge")
                        .HasColumnType("int");

                    b.Property<byte?>("PhoneNumberPreference")
                        .HasColumnType("tinyint");

                    b.Property<long?>("StateFilterId")
                        .HasColumnType("bigint");

                    b.Property<string>("States")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ZipCodeFilterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__LeadStor__3214EC07DF6A314D");

                    b.HasIndex("LeadTypeId");

                    b.ToTable("LeadStoreFilter");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreLeadTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Lead10000To24999")
                        .HasColumnType("float");

                    b.Property<double>("Lead1000To4999")
                        .HasColumnType("float");

                    b.Property<double>("Lead1To249")
                        .HasColumnType("float");

                    b.Property<double>("Lead25000Plus")
                        .HasColumnType("float");

                    b.Property<double>("Lead250To999")
                        .HasColumnType("float");

                    b.Property<double>("Lead5000To9999")
                        .HasColumnType("float");

                    b.Property<string>("LeadDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LeadTypeIdForExcel")
                        .HasColumnType("int");

                    b.Property<double>("NewLeadsPrice")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__LeadStor__3214EC07E34DFAB9");

                    b.ToTable("LeadStoreLeadTypes");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExcelPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__LeadStor__3214EC07841DB80E");

                    b.HasIndex("AddedBy");

                    b.ToTable("LeadStoreLog");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreOrderDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__LeadStor__3214EC0719F50B6E");

                    b.HasIndex("CartId");

                    b.ToTable("LeadStoreOrderDetails");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Leads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Crmtype")
                        .HasColumnType("int")
                        .HasColumnName("CRMType");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailOtp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EmailOTP");

                    b.Property<DateTime?>("EmailOtptime")
                        .HasColumnType("datetime")
                        .HasColumnName("EmailOTPTime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<long>("FlagId")
                        .HasColumnType("bigint");

                    b.Property<byte?>("GenderType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("IsSold")
                        .HasColumnType("tinyint")
                        .HasColumnName("isSold");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LeadAssignedDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("LeadCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LeadParentId")
                        .HasColumnType("int");

                    b.Property<long?>("LeadQualityId")
                        .HasColumnType("bigint");

                    b.Property<long>("LeadSourceId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("LeadsCartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LogId")
                        .HasColumnType("bigint");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileOtp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MobileOTP");

                    b.Property<DateTime?>("MobileOtptime")
                        .HasColumnType("datetime")
                        .HasColumnName("MobileOTPTime");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .IsFixedLength();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("PriorityId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("TempEmailOtp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TempEmailOTP");

                    b.Property<string>("TempMobileOtp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TempMobileOTP");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__LeadStor__3214EC07BAAD59DD");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("FlagId");

                    b.HasIndex("LeadCategoryId");

                    b.HasIndex("LeadQualityId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("LogId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadsLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("FlagId")
                        .HasColumnType("bigint");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__LeadStor__3214EC07893EBD7C");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("FlagId");

                    b.HasIndex("LeadId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("LeadsLog");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MainMenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SequenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id")
                        .HasName("PK__Menu__3214EC07B3F86410");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActvie")
                        .HasColumnType("bit");

                    b.Property<string>("MenuIcon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("MenuOrder")
                        .HasColumnType("float");

                    b.Property<string>("MenuUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SubMenuIcon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SubMenuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_MenuItems");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Plan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Plan__3214EC07531D2761");

                    b.HasIndex("ProductId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.PriorityMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("PriorityMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CarrierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Product__3214EC07769913E7");

                    b.HasIndex("CarrierId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.StateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("StateMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.StatePlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("PlanId")
                        .HasColumnType("bigint");

                    b.Property<byte>("PlanType")
                        .HasColumnType("tinyint");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StatePla__3214EC071C84F4FA");

                    b.HasIndex("PlanId");

                    b.HasIndex("StateId");

                    b.ToTable("StatePlan");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.StatusUpdateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<long>("FlagId")
                        .HasColumnType("bigint");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("StatusUpdateRecords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__StatusUp__3214EC07AFE3B139");

                    b.HasIndex("FlagId");

                    b.HasIndex("LeadId");

                    b.ToTable("StatusUpdateMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserCalendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__UserCal__3214EC079BE6D23D");

                    b.HasIndex("UserId");

                    b.ToTable("UserCalendar");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserCarrier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CarrierId")
                        .HasColumnType("bigint");

                    b.Property<string>("CarrierUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__UserCar__3214EC07A2C78AB2");

                    b.HasIndex("CarrierId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCarrier");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ForgetPasswordExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ForgetPasswordLink")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerifiedEmail")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("RoleType");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserOpportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverLicenseNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<byte?>("GenderType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("LeadStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherMaidenName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte?>("OpportunityStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__UserOpp__3214EC07C44A62BC");

                    b.HasIndex("StateId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOpportunity");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CarrierId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__UserPro__3214EC070E320F34");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProduct");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserTimeZones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("DisplayOnSite")
                        .HasColumnType("tinyint");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__TimeZone__3214EC071A1AFF4D");

                    b.ToTable("UserTimeZones");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyBackGroundColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FacebookLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FooterBackGroundColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FooterTextColorH")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FooterTitleColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FooterTitleTextSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GooglePlusLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HeaderBackGroundColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte?>("IsHealthNavigator")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("LeadStoreFilterId")
                        .HasColumnType("bigint");

                    b.Property<string>("LinkedInLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NavigationBackGroundColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NavigationtextColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NavigationtextSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePic")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ShortUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Short_Url");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("SubNavigationBgcolor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SubNavigationBGColor");

                    b.Property<byte?>("TimeZoneId")
                        .HasColumnType("tinyint");

                    b.Property<string>("TwitterLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UserLoginId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC079F6CC205");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("ParentId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdditionalFieldData", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.FlagMaster", "Flag")
                        .WithMany("AdditionalFieldData")
                        .HasForeignKey("FlagId")
                        .IsRequired()
                        .HasConstraintName("FK_FlagMaster");

                    b.Navigation("Flag");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminCalendarUsers", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.AdminCalendar", "AdminCalendar")
                        .WithMany("AdminCalendarUsers")
                        .HasForeignKey("AdminCalendarId")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.Users", "User")
                        .WithMany("AdminCalendarUsers")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("AdminCalendar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminDocuments", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("AdminDocuments")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLead", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("AdminLead")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Adminlead_StateMaster");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadComment", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("AdminLeadComment")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.AdminLead", "AdminLead")
                        .WithMany("AdminLeadComment")
                        .HasForeignKey("AdminLeadId")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");

                    b.Navigation("AdminLead");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadConversation", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("AdminLeadConversation")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.AdminLead", "AdminLead")
                        .WithMany("AdminLeadConversation")
                        .HasForeignKey("AdminLeadId")
                        .IsRequired()
                        .HasConstraintName("FK_AdminLeadConversation_AdminLead_LeadId");

                    b.Navigation("AddedByNavigation");

                    b.Navigation("AdminLead");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadFile", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("AdminLeadFile")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.AdminLead", "AdminLead")
                        .WithMany("AdminLeadFile")
                        .HasForeignKey("AdminLeadId")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");

                    b.Navigation("AdminLead");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLeadNote", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("AdminLeadNote")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.AdminLead", "AdminLead")
                        .WithMany("AdminLeadNote")
                        .HasForeignKey("AdminLeadId")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");

                    b.Navigation("AdminLead");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminNotes", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Users", "User")
                        .WithMany("AdminNotes")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Agency", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("Agency")
                        .HasForeignKey("StateId");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AgencyAppointment", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Agency", "Agency")
                        .WithMany("AgencyAppointment")
                        .HasForeignKey("AgencyId")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("AgencyAppointment")
                        .HasForeignKey("StateId")
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AgencyLicense", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Agency", "Agency")
                        .WithMany("AgencyLicense")
                        .HasForeignKey("AgencyId")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("AgencyLicense")
                        .HasForeignKey("StateId")
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AgencyState", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Agency", "Agency")
                        .WithMany("AgencyState")
                        .HasForeignKey("AgencyId")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("AgencyState")
                        .HasForeignKey("StateId")
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CityMaster", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("CityMaster")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_CityMaster_StateMaster");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CultureMaster", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.CurrencyMaster", "CurrencyCode")
                        .WithMany("CultureMaster")
                        .HasForeignKey("CurrencyCodeId")
                        .IsRequired()
                        .HasConstraintName("FK__CultureMa__Curre__3F865F66");

                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "ModifiedByNavigation")
                        .WithMany("CultureMaster")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK__CultureMa__Modif__407A839F");

                    b.Navigation("CurrencyCode");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.DesignationPermission", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.DesignationMaster", "Designation")
                        .WithMany("DesignationPermission")
                        .HasForeignKey("DesignationId")
                        .IsRequired()
                        .HasConstraintName("FK_DesignationPermission_DesignationPermission");

                    b.Navigation("Designation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadComment", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("LeadComment")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadConversation", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("LeadConversation")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadEvent", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "CreatedByNavigation")
                        .WithMany("LeadEventCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__LeadEvent__Creat__100C566E");

                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "User")
                        .WithMany("LeadEventUser")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__LeadEvent__UserI__0F183235");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadFile", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("LeadFile")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadNote", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("LeadNote")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.Leads", "Lead")
                        .WithMany("LeadNote")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK_LeadNote_Leads");

                    b.Navigation("AddedByNavigation");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreFilter", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.LeadStoreLeadTypes", "LeadType")
                        .WithMany("LeadStoreFilter")
                        .HasForeignKey("LeadTypeId");

                    b.Navigation("LeadType");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreLog", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "AddedByNavigation")
                        .WithMany("LeadStoreLog")
                        .HasForeignKey("AddedBy")
                        .IsRequired();

                    b.Navigation("AddedByNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreOrderDetails", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.LeadStoreCart", "Cart")
                        .WithMany("LeadStoreOrderDetails")
                        .HasForeignKey("CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Leads", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.CityMaster", "City")
                        .WithMany("Leads")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Leads_CityMaster");

                    b.HasOne("Blazor.API.Data.Entities.CountryMaster", "Country")
                        .WithMany("Leads")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Leads_CountryMaster");

                    b.HasOne("Blazor.API.Data.Entities.FlagMaster", "Flag")
                        .WithMany("Leads")
                        .HasForeignKey("FlagId")
                        .IsRequired()
                        .HasConstraintName("FK_Leads_FlagMaster");

                    b.HasOne("Blazor.API.Data.Entities.LeadCategoryMaster", "LeadCategory")
                        .WithMany("Leads")
                        .HasForeignKey("LeadCategoryId")
                        .HasConstraintName("FK__Leads__LeadCateg__51A50FA1");

                    b.HasOne("Blazor.API.Data.Entities.LeadQualityMaster", "LeadQuality")
                        .WithMany("Leads")
                        .HasForeignKey("LeadQualityId")
                        .HasConstraintName("FK__Leads__LeadQuali__529933DA");

                    b.HasOne("Blazor.API.Data.Entities.LeadSourceMaster", "LeadSource")
                        .WithMany("Leads")
                        .HasForeignKey("LeadSourceId")
                        .IsRequired()
                        .HasConstraintName("FK_Leads_LeadSourceMaster");

                    b.HasOne("Blazor.API.Data.Entities.LeadStoreLog", "Log")
                        .WithMany("Leads")
                        .HasForeignKey("LogId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Leads_LeadsLog_LogId");

                    b.HasOne("Blazor.API.Data.Entities.PriorityMaster", "Priority")
                        .WithMany("Leads")
                        .HasForeignKey("PriorityId")
                        .HasConstraintName("FK_Leads_PriorityMaster");

                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("Leads")
                        .HasForeignKey("StateId");

                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "User")
                        .WithMany("Leads")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Leads_UserLogin");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Flag");

                    b.Navigation("LeadCategory");

                    b.Navigation("LeadQuality");

                    b.Navigation("LeadSource");

                    b.Navigation("Log");

                    b.Navigation("Priority");

                    b.Navigation("State");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadsLog", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "CreatedByNavigation")
                        .WithMany("LeadsLogCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_LeadsLog_UserLogin");

                    b.HasOne("Blazor.API.Data.Entities.FlagMaster", "Flag")
                        .WithMany("LeadsLog")
                        .HasForeignKey("FlagId")
                        .HasConstraintName("FK__LeadsLog__FlagId__416EA7D8");

                    b.HasOne("Blazor.API.Data.Entities.Leads", "Lead")
                        .WithMany("LeadsLog")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK_LeadsLog_Leads");

                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "ModifiedByNavigation")
                        .WithMany("LeadsLogModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK_LeadsLog_UserLogin1");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Flag");

                    b.Navigation("Lead");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Plan", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Product", "Product")
                        .WithMany("Plan")
                        .HasForeignKey("ProductId")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Product", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Carrier", "Carrier")
                        .WithMany("Product")
                        .HasForeignKey("CarrierId")
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.StateMaster", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.CountryMaster", "Country")
                        .WithMany("StateMaster")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_StateMaster_CountryMaster");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.StatePlan", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Plan", "Plan")
                        .WithMany("StatePlan")
                        .HasForeignKey("PlanId")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("StatePlan")
                        .HasForeignKey("StateId")
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.StatusUpdateMaster", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.FlagMaster", "Flag")
                        .WithMany("StatusUpdateMaster")
                        .HasForeignKey("FlagId")
                        .IsRequired()
                        .HasConstraintName("FK__StatusUpd__FlagI__679450C0");

                    b.HasOne("Blazor.API.Data.Entities.Leads", "Lead")
                        .WithMany("StatusUpdateMaster")
                        .HasForeignKey("LeadId")
                        .IsRequired()
                        .HasConstraintName("FK__StatusUpd__LeadI__66A02C87");

                    b.Navigation("Flag");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserCalendar", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Users", "User")
                        .WithMany("UserCalendar")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserCarrier", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Carrier", "Carrier")
                        .WithMany("UserCarrier")
                        .HasForeignKey("CarrierId")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.Users", "User")
                        .WithMany("UserCarrier")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Carrier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Role", "RoleTypeNavigation")
                        .WithMany("UserLogin")
                        .HasForeignKey("RoleType")
                        .IsRequired()
                        .HasConstraintName("FK_UserLogin_Role");

                    b.Navigation("RoleTypeNavigation");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserOpportunity", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("UserOpportunity")
                        .HasForeignKey("StateId");

                    b.HasOne("Blazor.API.Data.Entities.Users", "User")
                        .WithMany("UserOpportunity")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("State");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserProduct", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.Carrier", "Carrier")
                        .WithMany("UserProduct")
                        .HasForeignKey("CarrierId")
                        .IsRequired();

                    b.HasOne("Blazor.API.Data.Entities.Product", "Product")
                        .WithMany("UserProduct")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_UserProduct_Product");

                    b.HasOne("Blazor.API.Data.Entities.Users", "User")
                        .WithMany("UserProduct")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Carrier");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Users", b =>
                {
                    b.HasOne("Blazor.API.Data.Entities.CityMaster", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Users_CityMaster");

                    b.HasOne("Blazor.API.Data.Entities.CountryMaster", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Users_Country");

                    b.HasOne("Blazor.API.Data.Entities.DesignationMaster", "Designation")
                        .WithMany("Users")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK_Users_DesignationMaster");

                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "Parent")
                        .WithMany("UsersParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Users_UserLogin");

                    b.HasOne("Blazor.API.Data.Entities.StateMaster", "State")
                        .WithMany("Users")
                        .HasForeignKey("StateId");

                    b.HasOne("Blazor.API.Data.Entities.UserLogin", "UserLogin")
                        .WithMany("UsersUserLogin")
                        .HasForeignKey("UserLoginId")
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Designation");

                    b.Navigation("Parent");

                    b.Navigation("State");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminCalendar", b =>
                {
                    b.Navigation("AdminCalendarUsers");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.AdminLead", b =>
                {
                    b.Navigation("AdminLeadComment");

                    b.Navigation("AdminLeadConversation");

                    b.Navigation("AdminLeadFile");

                    b.Navigation("AdminLeadNote");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Agency", b =>
                {
                    b.Navigation("AgencyAppointment");

                    b.Navigation("AgencyLicense");

                    b.Navigation("AgencyState");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Carrier", b =>
                {
                    b.Navigation("Product");

                    b.Navigation("UserCarrier");

                    b.Navigation("UserProduct");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CityMaster", b =>
                {
                    b.Navigation("Leads");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CountryMaster", b =>
                {
                    b.Navigation("Leads");

                    b.Navigation("StateMaster");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.CurrencyMaster", b =>
                {
                    b.Navigation("CultureMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.DesignationMaster", b =>
                {
                    b.Navigation("DesignationPermission");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.FlagMaster", b =>
                {
                    b.Navigation("AdditionalFieldData");

                    b.Navigation("Leads");

                    b.Navigation("LeadsLog");

                    b.Navigation("StatusUpdateMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadCategoryMaster", b =>
                {
                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadQualityMaster", b =>
                {
                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadSourceMaster", b =>
                {
                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreCart", b =>
                {
                    b.Navigation("LeadStoreOrderDetails");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreLeadTypes", b =>
                {
                    b.Navigation("LeadStoreFilter");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.LeadStoreLog", b =>
                {
                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Leads", b =>
                {
                    b.Navigation("LeadNote");

                    b.Navigation("LeadsLog");

                    b.Navigation("StatusUpdateMaster");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Plan", b =>
                {
                    b.Navigation("StatePlan");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.PriorityMaster", b =>
                {
                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Product", b =>
                {
                    b.Navigation("Plan");

                    b.Navigation("UserProduct");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Role", b =>
                {
                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.StateMaster", b =>
                {
                    b.Navigation("AdminLead");

                    b.Navigation("Agency");

                    b.Navigation("AgencyAppointment");

                    b.Navigation("AgencyLicense");

                    b.Navigation("AgencyState");

                    b.Navigation("CityMaster");

                    b.Navigation("Leads");

                    b.Navigation("StatePlan");

                    b.Navigation("UserOpportunity");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.UserLogin", b =>
                {
                    b.Navigation("AdminDocuments");

                    b.Navigation("AdminLeadComment");

                    b.Navigation("AdminLeadConversation");

                    b.Navigation("AdminLeadFile");

                    b.Navigation("AdminLeadNote");

                    b.Navigation("CultureMaster");

                    b.Navigation("LeadComment");

                    b.Navigation("LeadConversation");

                    b.Navigation("LeadEventCreatedByNavigation");

                    b.Navigation("LeadEventUser");

                    b.Navigation("LeadFile");

                    b.Navigation("LeadNote");

                    b.Navigation("LeadStoreLog");

                    b.Navigation("Leads");

                    b.Navigation("LeadsLogCreatedByNavigation");

                    b.Navigation("LeadsLogModifiedByNavigation");

                    b.Navigation("UsersParent");

                    b.Navigation("UsersUserLogin");
                });

            modelBuilder.Entity("Blazor.API.Data.Entities.Users", b =>
                {
                    b.Navigation("AdminCalendarUsers");

                    b.Navigation("AdminNotes");

                    b.Navigation("UserCalendar");

                    b.Navigation("UserCarrier");

                    b.Navigation("UserOpportunity");

                    b.Navigation("UserProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
