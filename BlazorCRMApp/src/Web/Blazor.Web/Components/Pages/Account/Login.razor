@page "/login"
@using global::Shared.Lib.Dto
@layout EmptyLayout

<section class="vh-100">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-9 col-lg-6 col-xl-5">
                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp"
                     class="img-fluid" alt="Sample image">
            </div>
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <EditForm Model="loginModal" OnValidSubmit="UserLogin">
                    <DataAnnotationsValidator />
                    @if (!string.IsNullOrWhiteSpace(errorMessage))
                    {
                        <div class="d-flex flex-row align-items-center justify-content-center justify-content-lg-start">
                            <div class="alert alert-danger">@errorMessage</div>
                        </div>
                        <br />
                    }
                    <!-- Email input -->
                    <div data-mdb-input-init class="form-outline mb-4">
                        <InputText @bind-Value="loginModal.UserName" class="form-control form-control-lg"
                                   placeholder="Enter a valid email address" />
                        <ValidationMessage For="@(() => loginModal.UserName)" />
                    </div>

                    <!-- Password input -->
                    <div data-mdb-input-init class="form-outline mb-3">
                        <InputText @bind-Value="loginModal.Password" class="form-control form-control-lg"
                                   placeholder="Enter password" />
                    </div>

                    <div class="d-flex justify-content-between align-items-center">
                        <!-- Checkbox -->
                        <div class="form-check mb-0">
                            <input class="form-check-input me-2" type="checkbox" value="" id="form2Example3" />
                            <label class="form-check-label" for="form2Example3">
                                Remember me
                            </label>
                        </div>
                        <a href="#!" class="text-body">Forgot password?</a>
                    </div>

                    <div class="text-center text-lg-start mt-4 pt-2">
                        <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg"
                                style="padding-left: 2.5rem; padding-right: 2.5rem;">
                            Login
                        </button>
                        <p class="small fw-bold mt-2 pt-1 mb-0">
                            Don't have an account? <a href="#!"
                                                      class="link-danger">Register</a>
                        </p>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
    <div class="d-flex flex-column flex-md-row text-center text-md-start justify-content-between py-4 px-4 px-xl-5 bg-primary">
        <!-- Copyright -->
        <div class="text-white mb-3 mb-md-0">
            Copyright © 2024. All rights reserved.
        </div>
        <!-- Copyright -->
        <!-- Right -->
        <div>
            <a href="#!" class="text-white me-4">
                <i class="fab fa-facebook-f"></i>
            </a>
            <a href="#!" class="text-white me-4">
                <i class="fab fa-twitter"></i>
            </a>
            <a href="#!" class="text-white me-4">
                <i class="fab fa-google"></i>
            </a>
            <a href="#!" class="text-white">
                <i class="fab fa-linkedin-in"></i>
            </a>
        </div>
        <!-- Right -->
    </div>
</section>

@code {
    [Inject]
    NavigationManager NavigationManager { get; set; }
    public LoginDto loginModal { get; set; } = new();
    public string errorMessage = string.Empty;

    public async Task UserLogin()
    {
        try
        {
            var userAccount = (loginModal.UserName == "Demo" || loginModal.UserName == "Vinod") && loginModal.Password == "Dots@123";
            if (!userAccount)
            {
                errorMessage = "Inviald Login Detail";
                return;
            }

            if (loginModal.UserName == "Demo")
                NavigationManager!.NavigateTo($"/identity/account/authentication?name=Demo&role=Admin", true);
            else
                NavigationManager!.NavigateTo($"/identity/account/authentication?name=Vinod&role=SuperAdmin", true);

        }
        catch (Exception ex)
        {

        }
    }
}



<style>
    .divider:after,
    .divider:before {
        content: "";
        flex: 1;
        height: 1px;
        background: #eee;
    }

    .h-custom {
        height: calc(100% - 73px);
    }

    @@media (max-width: 450px) {
        .h-custom {
            height: 100%;
        }
    }
</style>