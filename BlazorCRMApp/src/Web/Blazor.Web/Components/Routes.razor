<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)" />
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(EmptyLayout)">
                <NotFoundComponent />
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private bool _hasNavigated;

    [CascadingParameter]
    public HttpContext HttpContext { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_hasNavigated)
        {
            if (NavigationManager.Uri.EndsWith("/"))
            {
                _hasNavigated = true; // Prevent recursive navigation
                NavigationManager!.NavigateTo($"/identity/account/userlogin", true);
            }
        }
    }
}